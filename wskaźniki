//sposób użycia wskaźników
#include <iostream>

int main()
{
   using namespace std;
   int updates = 6; //deklaracja zmiennej
   int *p_updates; //deklaracja wskaźnika na int

   p_updates = &updates; //przypisanie wskaznikowi adresu int

   //pokazanie wartosci na dwa sposoby
   cout<<"Wartości: updates = " <<updates;
   cout<<", *updates = " << *p_updates <<endl;

   //pokazanie adresu na dwa sposoby
   cout<<"Adresy: &updates = " <<&updates;
   cout<<", p_updates: " << p_updates<<endl;

   //uzycie wskaznika do zmiany wartosci
   *p_updates = *p_updates + 1;
   cout<<"Zmieniona wartosci o 1: " <<*p_updates<<endl;

   //wyrażenia równoważne
   int jumbo = 23;
   int *pe = &jumbo;
   cout<<jumbo<<" = "<<*pe;
   return 0;
}

=================================================================================================================================================================

//inicjalizowanie wskaźników adresem

#include <iostream>

int main()
{
   using namespace std;
   int higgens = 5;
   int* p_higgens = &higgens;
   cout<<"higgens: "<<higgens<<" *p_higgens: "<<*p_higgens<<endl;
   cout<<"&higgens: "<<&higgens<<" p_higgens: "<<p_higgens;
}


=================================================================================================================================================================

//rzutowanie jawne na odpowiedni typ

int* pt;
pt = (int*) 0xB8000000; //zgodnosc typow


=================================================================================================================================================================

//użycie operatora new do alokowania pamięci
#include <iostream>

int main()
{
   using namespace std;
   int nights = 1001;
   int *pt = new int; //alokacja pamięci na wartość int
   *pt = nights; //zapis wartosci do utworzonego wskaznika



   cout<<"Wartosc nights: "<<*pt<<" oraz jej adres: "<<pt;

}

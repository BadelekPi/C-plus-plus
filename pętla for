//uzycie petli for dekrementujacej wartosc zadaną
#include <iostream>
int main()
{
    using namespace std;
    int limit;
    cin>>limit;
    int i;
    for(i=limit;i;i--)
    {
      cout<<"Pozostalo: "<<i<<endl;
    }
}

========================================================================================================================================================================

//liczenia silni z wykorzystaniem tablic
#include <iostream>
using namespace std;
const int ArSize=16; //przyklad deklaracji zewnętrzenej
int main()
{
    long long factorials[ArSize];
    factorials[1] = factorials[0] = 1LL;
    for (int i=2; i < ArSize; i++)
        factorials[i] = i * factorials[i-1];
    for (int i = 0; i < ArSize; i++)
        std:cout << i << "! = " << factorials[i] << std::endl;
}

========================================================================================================================================================================

//petla for robiaca skok o wskazaną liczbe
#include <iostream>
using namespace std;
int main()
{
    int by;
    cin>>by;
    cout<<"Zliczanie co: "<<by<<endl;
    for(int i=0;i<100;i=i+by)
    {
        cout<<i<<endl;
    }
 
======================================================================================================================================================================== 
 
//petla for wyswietlająca znaki od konca
#include <iostream>
#include <string>
using namespace std;
int main()
{
   cout<<"Podaj slowo";
   string word;
   cin>>word;

   //wyswietlanie liter od konca
   for (int i = word.size() - 1; i>= 0; i--)
   {
       cout << word[i];
   }
}
}

========================================================================================================================================================================

//petla for odwracajaca kolejnosc liter w slowie
#include <iostream>
#include <string>
using namespace std;
int main()
{
   cout<<"Podaj slowo: ";
   string word;
   cin >> word;

   //fizycznie modyfikowany obiekt string
   char temp;
   int i,j;
   for (j=0,i=word.size()-1;j<i;i--,j++)
   {
       temp = word[i];
       word[i] = word[j];
       word[j] = temp;
   } //koniec bloku
   cout<<word;
}

========================================================================================================================================================================

//petla for szukajaca odpowiadajacej litery do slowa
#include <iostream>
#include <cstring>
using namespace std;

int main()
{
   char word[5] = "?ate";

   for (char ch='a'; strcmp(word, "mate"); ch++)
   {
       cout<<word<<endl;
       word[0] = ch;
   }
   cout << "Petla sie skonczyla, slowo to: " << word << endl;
   return 0;
}

========================================================================================================================================================================

//uzycie tablic dwuwymiarowych
#include <iostream>

using namespace std;
const int Cities = 5;
const int Years = 4;
int main()
{
    const char * cities[Cities] =
    {
        "Jelenia Góra",
        "Zielona Góra",
        "Stara Góra",
        "Górki",
        "Wilgna Górna"
    };

    int maxtemps[Years][Cities] = //tablica dwuwymiarowa
    {
        {32, 31, 32, 34, 29},
        {28, 31, 31, 32, 30},
        {26, 34, 23, 32, 12},
        {28, 29, 31, 32, 30}
    };

    for(int city=0; city< Cities; ++city)
    {
        cout<<cities[city] << ":\t";
        for (int year = 0; year < Years; ++year)
            cout<< maxtemps[year][city] << "\t";
        cout<<endl;
    }

}

//mozna zastosowac tez:
//char cities[Cities][25] - tablica 5 tablic po 25 znakow
//tablica wskaznikow przechowuje jednak 5 literalow lancuchowych, ekonomicznej wykorzystuje pamiec
//mozna tez uzyc string
//const string cities[Cities] = //tablica na 5 obiektow string

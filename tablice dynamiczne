=================================================================================================================================================================
//uzycie tablicy dynamicznej
#include <iostream>

int main()
{
  using namespace std;
  double *p3 = new double[3]; //zaalokowane miejsce na 3 wartosci typu double
  p3[0] = 0.2;
  p3[1] = 0.5;
  p3[2] = 0.8;
  cout << "p3[1] to " << p3[1] << ".\n";
  p3 = p3+1; //dodanie do liczby calkowitej jedynki zwieksza wartosc tej liczby o jeden, ale dodanie jedynki do wskaznika zwieksza wskazywany adres o liczbe bajtow
             //odpowiadajacyh danemu typowi
  cout<< "Teraz p3[0] to "<<p3[0]<< ".\n";
  p3 = p3-1; //powrot do prawidlowego adresu zmiennych tablicy
}

=================================================================================================================================================================

//stosowanie tablic jako parametrow funkcji
#include <iostream>
using namespace std;

const int ArSize = 8;
int sum_arr(int arr[], int n); //prototyp
int main()
{
    using namespace std;
    int cookies[ArSize] = {1,2,4,8,16,32,64,128};

    int sum = sum_arr(cookies, ArSize);
    cout << "Liczba zjedzonych ciasteczek: " << sum << "\n";
    return 0;
}

//zwraca sume tablicy calkowitoliczbowej
int sum_arr(int arr[], int n)
{
    int total = 0;
    for (int i = 0; i < n; i++)
        total = total + arr[i];
    return total;
}

=================================================================================================================================================================

//zmiana wartosci elementow tablicy za pomoca tego samego czynnika
#include <iostream>
using namespace std;

const int Max = 5;

//prototypy funkcji
int fill_array(double ar[], int limit);
void show_array(const double ar[], int n); //nie zmienia danych
void revalue(double r, double ar[],int n);

int main()
{
   double properties[Max];

   int size = fill_array(properties, Max);
   show_array(properties, size);
   if (size > 0)
   {
       cout << "Podaj czynnik zmiany wartosci: ";
       double factor;
       while (!(cin >> factor)) //nieliczbowa wartosc na wejsciu
       {
           cin.clear();
           while (cin.get() != '\n')
               continue;
           cout << "Niepoprawna wartosc; podaj liczbe: ";
       }
       revalue(factor, properties, size);
       show_array(properties, size);
   }
   cout << "Gotowe. \n";
   cin.get();
   cin.get();
   return 0;
}

int fill_array(double ar[], int limit)
{
    double temp;
    int i;
    for (i = 0; i < limit; i++)
    {
        cout << "Podaj wartosc nr " << (i+1) << ": ";
        cin >> temp;
        if (!cin) //bledne dane
        {
            cin.clear();
            while(cin.get() != '\n')
                continue;
            cout << "Bledne dane, wprowadzanie danych przerwane. \n";
            break;
        }
        else if (temp < 0) //nakaz zakonczenia
            break;
        ar[i] = temp;
    }
    return i;
}

//ponizsza funkcja moze uzyc tablicy ktorej adres przekazano
//w ar ale nie moze jej modyfikowac

void show_array(const double ar[], int n)
{
    for (int i=0; i < n; i++)
    {
        cout << "Nieruchomosc nr " << (i+1) << ": ";
        cout << ar[i] << endl;
    }
}

//mnozy kazdy element ar[] przez r
void revalue(double r, double ar[], int n)
{
    for (int i = 0; i < n; i++)
        ar[i] *= r;
}

=================================================================================================================================================================


//obliczanie sumy elementow tablicy za pomoca dwoch wskaznikowych definiujacych zakres tablicy
#include <iostream>
using namespace std;

const int ArSize = 8;
int sum_arr(const int *begin, const int *end);
int main()
{
    int cookies[ArSize] = {1,2,4,8,16,32,64,128};

    int sum = sum_arr(cookies, cookies + ArSize);
    cout << "Zjedzonych ciasteczek " << sum << endl;
    sum = sum_arr(cookies, cookies + 3); //pierwsze trzy elementy
    cout << "Pierwsze trzy osoby zjadly " << sum << " ciastek. \n";
    sum = sum_arr(cookies+ 4, cookies + 8); //ostatnie 4 elementy
    cout << "Ostatnich czworo zjadlo " << sum << " ciastek. \n";
    return 0;
}

//zwraca sume tablic liczb calkowitych
int sum_arr(const int *begin, const int *end)
{
    const int * pt;
    int total = 0;

    for (pt = begin; pt != end; pt++)
        total = total + *pt;
    return total;
}

=================================================================================================================================================================
